import Head from 'next/head';
import type { FormEvent, ChangeEvent } from 'react';
import { useState } from 'react';

import styles from '@/styles/Home.module.css';
import { trpc } from '../utils/trpc';

export default function Home() {
  const [inputValue, setInputValue] = useState('');

  const stationsMutation = trpc.tubeStationsCreate.useMutation();
  const { isError, isLoading, isSuccess, failureReason } = stationsMutation;

  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {
    setInputValue(event.currentTarget.value);
  };

  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    stationsMutation.mutate({ name: inputValue });
  };

  return (
    <>
      <Head>
        <title>Create</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <form onSubmit={handleSubmit}>
          <h1>Create</h1>
          <label htmlFor="stations">Station name</label>{' '}
          <input list="stations" name="stations" onChange={handleChange} value={inputValue} />
          <div>
            {isError && <p>Error: {failureReason?.message ?? 'Error'}</p>}
            {isLoading && <p>Loading</p>}
            {isSuccess && <code>{JSON.stringify(stationsMutation.data)}</code>}
          </div>
          <button type="submit">Add station</button>
        </form>
      </main>
    </>
  );
}
